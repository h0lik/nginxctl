#!/bin/bash
# shellcheck disable=SC1017
DIR=
set -e 

rpoxy() {
reset 
cat << EOF
 ---------------------------------------------------------------------
 #####    #####             ##  ##    ####     ####    ##  ##   ##  ##  
 ##  ##   ##  ##            ### ##   ##  ##     ##     ### ##   ##  ##  
 ##  ##   ##  ##            ######   ##         ##     ######    ####   
 #####    #####    ######   ######   ## ###     ##     ######     ##    
 ####     ##                ## ###   ##  ##     ##     ## ###    ####   
 ## ##    ##                ##  ##   ##  ##     ##     ##  ##   ##  ##  
 ##  ##   ##                ##  ##    ####     ####    ##  ##   ##  ##  
 ---------------------------------------------------------------------
 Create config nginx reverse-proxy
 Domains: domains.com / Your domain name
 Proxy-address: 0.0.0.0:00 / Where are we proxying to
 ---------------------------------------------------------------------
EOF
sleep 2
echo "Enter your domain name"
read -p "Domians:" DOMAINS
echo "Куда будет проксировать без http/https"
read -p "Proxy-address:" PROXY
touch $DIR/$DOMAINS.conf

cat << EOF >> $DIR/$DOMAINS.conf
server {
                listen 80;
                server_name $DOMAINS;
                return 301 https://$:server_name$:request_uri;
        }
server {
                listen 443 ssl;
                ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
                ssl_prefer_server_ciphers on;
                ssl_certificate /etc/ssl/certs/certificate.crt;
                ssl_certificate_key /etc/ssl/private/private.key;
                ssl_ciphers HIGH:!aNULL:!MD5;
 
                proxy_set_header X-Real-IP $:remote_addr;
                proxy_set_header X-Forwarded-Host :$:host;
                proxy_set_header X-Forwarded-For $:proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
                proxy_set_header Host $:host;
 
                server_name $DOMAINS;
                access_log /var/log/nginx/$DOMAINS-access.log;
                error_log /var/log/nginx/$DOMAINS-error.log;
                location / {
                        proxy_pass http://$PROXY;
                }
        }
EOF
sed -i 's/return 301 https://$:server_name$:request_uri;/return 301 https://$server_name$request_uri;/g' $DIR/$DOMAINS.conf
sed -i 's/proxy_set_header X-Real-IP $:remote_addr;/proxy_set_header X-Real-IP $remote_addr;/g' $DIR/$DOMAINS.conf
sed -i 's/proxy_set_header X-Forwarded-Host :$:host;/proxy_set_header X-Forwarded-Host $host;/g' $DIR/$DOMAINS.conf
sed -i 's/proxy_set_header X-Forwarded-For $:proxy_add_x_forwarded_for;/proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;/g' $DIR/$DOMAINS.conf
sed -i 's/proxy_set_header Host $:host;/proxy_set_header Host $host;/g' $DIR/$DOMAINS.conf

echo "test nginx configure"

echo -e "If nginx is \e[32m OK \e[0m , then you can restart it"
echo -e "We get a free SSL certificate?"
echo "Free SSL - Y-yes, N-no! [y/n]"
read CERKEY
if [ $CERKEY = "y" ] ;
    then
	echo -e "\e[32m Restart Nginx \e[0m"
	certbot --nginx -d $DOMAINS
  check_nginx
	else
	echo "\e[31m Exit \e[0m"
	exit;
fi
echo -e "Restart Nginx?"
echo "Press enter to continue [y/n]"
read ENTER
if [ $ENTER = "y" ] ;
    then
	echo -e "\e[32m Restart Nginx \e[0m"
	systemctl restart nginx
  check_nginx
	else
	echo "\e[31m Exit \e[0m"
	exit;
fi
}